version: '3.8'

services:
  mysql-container:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: spring_batch
    ports:
      - "3306:3306"
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./api/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - my-network

  api-module-container:
    image: "${DOCKER_USERNAME}/api-module:latest"
    ports:
      - "8080:8080"
    depends_on:
      - mysql-container
    networks:
      - my-network

  prometheus:
    image: prom/prometheus:v2.33.1
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:8.3.3
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    networks:
      - monitoring

networks:
  my-network:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  mysql-volume:
    driver: local
  prometheus_data:
  grafana_data:
